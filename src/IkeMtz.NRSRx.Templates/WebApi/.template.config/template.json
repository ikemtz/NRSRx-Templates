{
  "$schema": "http://json.schemastore.org/template",
  "author": "@ikemtz",
  "classifications": [ "NRSRx", "Service", "WebApi", "Web" ],
  "name": "NRSRx WebApi",
  "shortName": "nrsrx-webapi",
  "defaultName": "My.NRSRx.WebApi",
  "identity": "IkeMtz.NRSRx.WebApi",
  "groupIdentity": "IkeMtz.NRSRx.WebApi",
  "description": "A template to spin up a new NRSRx WebApi service.",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "sourceName": "NRSRx_WebApi",
  "preferNameDirectory": true,
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!HasDb)",
          "exclude": [ "Data/*" ]
        },
        {
          "condition": "(!HasEventing)",
          "exclude": [ "Publishers/*" ]
        },
        {
          "condition": "SkipModelGeneration",
          "exclude": [ "Models/**" ]
        }
      ]
    }
  ],
  "guids": [
    "98048C9C-BF28-46BA-A98E-63767EE5E3A8"
  ],
  "symbols": {
    "Framework": {
      "type": "parameter",
      "description": "The target framework for the project.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net6.0",
          "description": "Target netcoreapp6.0"
        }
      ],
      "replaces": "net6.0",
      "defaultValue": "net6.0"
    },
    "SkipModelGeneration": {
      "type": "parameter",
      "datatype": "bool",
      "description": "Skip model generation.", 
      "defaultValue": "false"
    },
    "EntityName": {
      "type": "parameter",
      "datatype": "string",
      "description": "Name of initial entity.",
      "replaces": "ItemModel",
      "defaultValue": "Item",
      "fileRename": "ItemModel"
    },
    "HttpPort": {
      "type": "parameter",
      "datatype": "integer",
      "description": "Port number to use for the HTTP endpoint in launchSettings.json."
    },
    "HttpPortGenerated": {
      "type": "generated",
      "generator": "port",
      "parameters": {
        "low": 5000,
        "high": 6000
      }
    },
    "HttpPortReplacer": {
      "type": "generated",
      "generator": "coalesce",
      "parameters": {
        "sourceVariableName": "HttpPort",
        "fallbackVariableName": "HttpPortGenerated"
      },
      "replaces": "5000"
    },
    "LoggingProvider": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "ApplicationInsights",
          "displayName": "Application Insights",
          "description": "Leverage the Azure based logging service"
        },
        {
          "choice": "Splunk",
          "displayName": "Splunk",
          "description": "Leverage Splunk logging via SeriLog"
        },
        {
          "choice": "Elasticsearch",
          "description": "Leverage Elasticsearch logging via SeriLog",
          "displayName": "Elasticsearch"
        },
        {
          "choice": "NoLogging",
          "description": "No logging will be used",
          "displayName": "No Logging"
        }
      ],
      "defaultValue": "ApplicationInsights",
      "description": "The type of logging provider that will be used."
    },
    "DatabaseProvider": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "MsSql",
          "displayName": "MS SQL Server",
          "description": "Use a Microsoft SQL Server database"
        },
        {
          "choice": "MySql",
          "displayName": "MySql Server",
          "description": "Use a MySql database"
        },
        {
          "choice": "NoDb",
          "displayName": "No Database",
          "description": "This WebApi will not have a persisted state"
        }
      ],
      "defaultValue": "MsSql",
      "description": "The type of database that will be used."
    },
    "EventingProvider": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "Redis",
          "displayName": "Redis Streams",
          "description": "Leverage Redis Streams for pub/sub"
        },
        {
          "choice": "ServiceBus",
          "displayName": "Azure ServiceBus",
          "description": "Leverage Azure ServiceBus for pub/sub"
        },
        {
          "choice": "NoEvents",
          "description": "No Eventing will be used",
          "displayName": "No Eventing"
        }
      ],
      "defaultValue": "ServiceBus",
      "description": "The type of eventing provider that will be used."
    },
    "ApplicationInsights": {
      "type": "computed",
      "value": "(LoggingProvider == \"ApplicationInsights\")"
    },
    "Splunk": {
      "type": "computed",
      "value": "(LoggingProvider == \"Splunk\")"
    },
    "Elasticsearch": {
      "type": "computed",
      "value": "(LoggingProvider == \"Elasticsearch\")"
    },
    "HasLogging": {
      "type": "computed",
      "value": "(LoggingProvider != \"NoLogging\")"
    },
    "MsSql": {
      "type": "computed",
      "value": "(DatabaseProvider == \"MsSql\")"
    },
    "MySql": {
      "type": "computed",
      "value": "(DatabaseProvider == \"MySql\")"
    },
    "HasDb": {
      "type": "computed",
      "value": "(DatabaseProvider != \"NoDb\")"
    },
    "Redis": {
      "type": "computed",
      "value": "(EventingProvider == \"Redis\")"
    },
    "ServiceBus": {
      "type": "computed",
      "value": "(EventingProvider == \"ServiceBus\")"
    },
    "HasEventing": {
      "type": "computed",
      "value": "(EventingProvider != \"NoEvents\")"
    },
    "ServiceName": {
      "type": "generated",
      "generator": "regex",
      "dataType": "string",
      "replaces": "NRSRx_ServiceName",
      "parameters": {
        "source": "name",
        "steps": [
          {
            "regex": ".WebApi.*$",
            "replacement": ""
          }
        ]
      }
    }
  }
}
